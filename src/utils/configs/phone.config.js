import { parsePhoneNumberWithError } from 'libphonenumber-js'
import { ref, computed } from 'vue'

export function phoneConfig(options = { defaultCountry: 'RU' }) {
  const selectedCountry = ref(options.defaultCountry)
  const countries = [
    {
      id: 'RU',
      icon: 'üá∑üá∫',
      name: '–†–æ—Å—Å–∏—è',
      code: '+7',
      mask: '+7 (###) ###-##-##',
    },
    {
      id: 'TJ',
      icon: 'üáπüáØ',
      name: '–¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω',
      code: '+992',
      mask: '+992 ## ### ## ##',
    },
  ]

  const currentCountry = computed(
    () => countries[countries.findIndex((c) => c.id === selectedCountry.value)],
  )

  const validatePhone = (phoneNumber) => {
    const errors = []

    if (!phoneNumber) {
      errors.push('–ü–æ–ª–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º')
      return errors
    }

    try {
      const number = parsePhoneNumberWithError(phoneNumber, selectedCountry.value)

      if (!number || !number.isValid()) {
        errors.push('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞')
        return errors
      }

      if (number.country !== selectedCountry.value) {
        errors.push(`–ù–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–∑ ${currentCountry.value.name}`)
        return errors
      }
    } catch (error) {
      if (error.message === 'TOO_SHORT') errors.push('–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞')
      else if (error.message === 'NOT_A_NUMBER') errors.push('–ù–æ–º–µ—Ä —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã')
      else if (error.message === 'INVALID_COUNTRY') errors.push('–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Ç—Ä–∞–Ω—É')
      else errors.push('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–æ–º–µ—Ä–∞')
    }
    return errors
  }

  return {
    selectedCountry,
    countries,
    currentCountry,
    validatePhone,
  }
}
